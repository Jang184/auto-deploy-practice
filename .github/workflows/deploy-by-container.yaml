name: Deploy by Container

on:
  push:
    branches: [ release/container ]

env:
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Create .env file
      run: |
        echo "ECR_REGISTRY=${{ secrets.ECR_REGISTRY }}" > .env
          
    - name: Upload .env to S3
      run: aws s3 cp .env s3://${{ secrets.S3_BUCKET }}/

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Create CodeDeploy Deployment
      run: |
        aws ssm send-command \
          --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
          --document-name "AWS-RunShellScript" \
          --parameters commands='["aws s3 cp s3://${{ secrets.S3_BUCKET }}/.env /home/ec2-user/.env"]'

        aws deploy create-deployment \
          --application-name dev-app \
          --deployment-group-name dev-group \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --github-location repository=${{ github.repository }},commitId=${{ github.sha }}